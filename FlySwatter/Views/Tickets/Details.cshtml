@model FlySwatter.Models.Ticket

@{
    ViewBag.Title = "Details";

    var emphasis = new Dictionary<int, string>();
    emphasis.Add(1, "text-muted"); emphasis.Add(2, "text-warning");
    emphasis.Add(4, "text-danger"); emphasis.Add(3, "text-primary");
}
<div class="inline-title">
    <h2>@Html.DisplayFor(model => model.Title)</h2>
    @switch (Model.TicketStatus.Name)
    {
        case "Completed":
            <h4 class="btn btn-success">Completed</h4>
            break;
        case "In Progress":
        <h4 class="btn btn-info">In Progress</h4>
            break;
        case "Pending":
        <h4 class="btn btn-warning">Pending</h4>
            break;
        default:
        <h4 class="btn btn-danger">???</h4>
            break;
    }
    <h4 class="@emphasis[Model.TicketPriorityId]"> @Html.DisplayFor(model => model.TicketPriority.Name) </h4>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
</p>
<div class="row">
    <hr />
    <div class="col-sm-4">
        <div>
            <dl class="dl-horizontal">

                <dt>
                    User(s) Assigned
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.AssignedUser.Email)
                </dd>

                <dt>
                    Owner
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.OwnerUser.Email)
                </dd>

                <dt>
                    Project
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Project.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.TicketType.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Title)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Created)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Created)
                </dd>

                @if (Model.Updated.HasValue)
                {
                    <dt> Updated </dt>
                    <dd> @Model.Updated.Value </dd>
                }

                <dt> Comments </dt>
                <dd> @Model.TicketComments.ToList().Count</dd>
            </dl>
        </div>
        @if (Model.TicketHistories.Count > 0)
        {
            <h3>Changes To This Ticket</h3>
            <table class="table">
                <tbody>
                    @foreach (var item in Model.TicketHistories)
                    {
                        <tr>
                            <td> <strong>@item.Property</strong></td>
                            <td class="text-warning"> @item.OldValue </td>
                            <td class="text-success"> @item.NewValue </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div class="col-sm-4">
        @if (Model.Description != null)
        {
            <h5> Description </h5>
            <p> @Model.Description </p>
        }
    </div>
    <div class="col-sm-4">
        <div class="row">
            <h2>Add Attachment</h2>
            <form class="input-group separate" action="" method="post" enctype="multipart/form-data">
                @Html.HiddenFor(m => m.Id)
                <input class="form-control" type="url" name="pictureUrl" placeholder="Url of Picture" />
                <input class="form-control" type="text" name="aDescription" placeholder="Description..." />

                <input type="submit" class="btn btn-success" />
            </form>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div ul class="picture-list text-center well">
                    @foreach (var attachment in Model.TicketAttachments)
                    {
                        <a href="@attachment.FileUrl">
                            <img src="@attachment.FileUrl" />
                        </a>
                        <p class="image-caption">@attachment.Description</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<hr />
<div class="row">
    <h2 class="text-center">Comments</h2>
    <div class="col-sm-2">
    </div>
    <div class="col-sm-8">
        <div class="text-center comment-form">
            @using (Html.BeginForm("Details", "Tickets", FormMethod.Post, new { @class = "well form-group" }))
            {
                Html.HiddenFor(m => m.Id);
                <div class="row">
                    <div class="col-sm-10">
                        <textarea name="commentBody" class="form-control"></textarea>
                    </div>
                    <div class="col-sm-2">
                        <input type="submit" class="btn btn-primary" value="Post" name="submit" />
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-sm-12">
                @foreach (var comment in Model.TicketComments)
                {
                    <h4>@comment.User.FirstName</h4>
                    <i>@comment.Created.Date</i>
                    <p>@comment.Comment</p>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-2">
    </div>
</div>
