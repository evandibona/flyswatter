@model FlySwatter.Models.Ticket

@{
    ViewBag.Title = "Details";

    var emphasis = new Dictionary<int, string>();
    emphasis.Add(1, "text-muted"); emphasis.Add(2, "text-warning");
    emphasis.Add(4, "text-danger"); emphasis.Add(3, "text-primary");
}
<div class="inline-title">
    <h2>@Html.DisplayFor(model => model.Title)</h2>
    @switch (Model.TicketStatus.Name)
    {
        case "Completed":
            <h4 class="btn btn-success">Completed</h4>
            break;
        case "In Progress":
        <h4 class="btn btn-info">In Progress</h4>
            break;
        default:
        <h4 class="btn btn-danger">???</h4>
            break;
    }
    <h4 class="@emphasis[Model.TicketPriorityId]"> @Html.DisplayFor(model => model.TicketPriority.Name) </h4>
</div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
</p>
<div>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            User(s) Assigned
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AssignedUser.Email)
        </dd>

        <dt>
            Owner
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OwnerUser.Email)
        </dd>

        <dt>
            Project
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Project.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketType.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        @if (Model.Updated.HasValue)
        {
            <dt> Updated </dt>
            <dd> @Model.Updated.Value </dd>
        }

        <dt> Comments </dt>
        <dd> @Model.TicketComments.ToList().Count</dd>

    </dl>
</div>
@if (Model.Description != null)
{
    <h5> Description </h5>
    <p> @Model.Description </p>
}

<div class="row">
    <div class="col-sm-12">
        @using (Html.BeginForm("Details", "Tickets", FormMethod.Post))
        {
            Html.HiddenFor(m => m.Id); 
            <textarea name="commentBody"></textarea>
            <input type="submit" value="Blammo!" name="submit" />
        }
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        @foreach (var comment in Model.TicketComments)
        {
            <h4>@comment.User.FirstName</h4>
            <i>@comment.Created.Date</i>
            <p>@comment.Comment</p>
        }
    </div>
</div>