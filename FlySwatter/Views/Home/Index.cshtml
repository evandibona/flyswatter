@model FlySwatter.Models.HomeView
@using FlySwatter.Models;
@{
    ViewBag.Title = "Home";
    var color = new string[] { "", "cool", "lukewarm", "warmwarm", "hot" };
}

<!-- This page should not even be shown unless the user is authenticated. -->
@if (HttpContext.Current.User.Identity.IsAuthenticated)
{
    <div class="row submitter">
        <div class="col-sm-12" style="padding-bottom: 5px; ">
            <a href="/Users" class="btn btn-warning">List of Users</a>
            <a href="/" class="btn btn-default">Reset</a>
            <a href="/Tickets/Create" class="btn btn-indigo">New Ticket</a>
            <a href="/Projects/Create" class="btn btn-sunny">New Project</a>
        </div>
    </div>
    <div class="row submitter">
        <div class="col-sm-12">
            @using (Html.BeginForm())
            {
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search for..." name="searchString" />
                    <span class="input-group-btn">
                        <button class="btn btn-danger" type="submit">Search!</button>
                    </span>
                </div>
            }
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            @Html.ActionLink("Priority", "Index", new { sortOrder = "priority" })
                        </th>
                        <th>
                            @Html.ActionLink("Name", "Index", new { sortOrder = "title" })
                        </th>
                        <th>
                            @Html.ActionLink("Project", "Index", new { sortOrder = "project" })
                        </th>
                        <th>
                            @Html.ActionLink("Owner", "Index", new { sortOrder = "owned"})
                        </th>
                        <th>
                            @Html.ActionLink("Assigned", "Index", new { sortOrder = "assigned"})
                        </th>
                        <th>
                            @Html.ActionLink("Created", "Index", new { sortOrder = "created" })
                        </th>
                        <th> Description </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ticket in Model.Tickets)
                    {
                        <tr>
                            <td class="@color[ticket.TicketPriorityId]"> @ticket.TicketPriority.Name </td>
                            <td> <a href="/Tickets/Details/@ticket.Id">@ticket.Title</a></td>
                            <td> <a href="/Projects/Details/@ticket.Project.Id">@ticket.Project.Name</a> </td>
                            <td> <a href="/Users/Details/?email=@ticket.OwnerUser.Email">@ticket.OwnerUser.Email</a></td>
                            <td> <a href="/Users/Details/?email=@ticket.AssignedUser.Email">@ticket.AssignedUser.Email</a></td>
                            <td> @ticket.Created.Date.ToString().Split(' ')[0]</td>
                            <td> @ticket.Description </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <nav>
        <ul class="pagination">
            <li>
                <a href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @{var pages = 10;}
            @for (int i = 1; i <= pages; i++)
            {
                <li><a href="#">@i</a></li>
            }
            <li>
                <a href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}